{{range .}}// - RequestHandler.{{.OperationId}}
{{end}}// Parameters:
//   - apiServer: The API router handler used for setting up routes and middleware.
//   - server: The server interface implementation containing the endpoint handlers.
//
// Generics:
//   - T: A type that satisfies the api_context.ApiPrincipalContext interface, representing the principal/context
//		involved in the API operations.
// 
// This function will use the RequestHandler implementation
// that has already been generated to bind specific API routes 
// dynamically at runtime, based on the provided security definitions 
// and endpoint configurations.
func ResourcesHandler[T api_context.ApiPrincipalContext](apiServer server.ApiRouterHandler[T], service ServiceRequestHandler[T])  {
handler := &requestHandlerImpl[T]{
		Service: service,
	}
    ApiResourceRegister(apiServer, handler)
}

// ApiResourceRegister is a customizable resource handler that registers API endpoints from generated code.
// This method binds the custom `RequestHandler` implementation to specific API routes,
// allowing dynamic configuration of handlers.
//
// Parameters:
//   - apiServer: The API router handler used for setting up routes and middleware.
//   - handler: The `RequestHandler` interface implementation containing the actual endpoint handlers.
//
// Generics:
//   - T: A type that satisfies the api_context.ApiPrincipalContext interface, representing the principal/context
//	 involved in the API operations.
func ApiResourceRegister[T api_context.ApiPrincipalContext](apiServer server.ApiRouterHandler[T], handler RequestHandler[T])  {
{{range .}}

{{- $hasScopes := false -}}
{{- range .SecurityDefinitions -}}
    {{- if .Scopes -}}
        {{- $hasScopes = true -}}
    {{- end -}}
{{- end -}}

{{if $hasScopes}}
	apiServer.Add(handler.{{.OperationId}}, "{{.Path | swaggerUriToGorillaUri }}", "{{.Method }}", {{range .SecurityDefinitions}}{{toStringArray .Scopes}}...{{end}})
{{else}}
	apiServer.PublicRouter(handler.{{.OperationId}}, "{{.Path | swaggerUriToGorillaUri }}", "{{.Method }}")
{{end}}
{{end}}
}

func ApiResourceHandler[T api_context.ApiPrincipalContext](service ServiceRequestHandler[T]) func(handler server.ApiRouterHandler[T]) {
	return func(handler server.ApiRouterHandler[T]) {
		ResourcesHandler(handler, service)
	}
}
