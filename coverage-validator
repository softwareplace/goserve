#!/bin/bash

set -e

echo

mkdir -p .out || true

cov_ignoring=()

function appendCoverageIgnoring() {
  local ignoring_value="$1"

  # Ignoring values that starts with #, considered as a comment
  if [[ ! "$ignoring_value" =~ ^# ]]; then
    cov_ignoring+=("$ignoring_value")
  fi
}

if [ -f .covignore ]; then
  while IFS= read -r i || [ -n "$i" ]; do
    appendCoverageIgnoring "$i"
  done < .covignore
fi

if [ ${#cov_ignoring[@]} -ne 0 ]; then
  printf "Coverage ignoring:\n"
  printf "  %s\n" "${cov_ignoring[@]}"
  echo
fi

function runCoverage() {
  # Run tests and generate coverage
  go test ./... -coverprofile=.out/coverage.out
  coverage_out=$(cat .out/coverage.out)

  # Filter out ignored paths
  for i in "${cov_ignoring[@]}" ; do
      coverage_out=$(echo "$coverage_out" | grep -v "$i")
  done

  echo "$coverage_out" > .out/coverage.out

  # Generate coverage reports
  gocov convert .out/coverage.out > .out/coverage.json
  cat .out/coverage.json | gocov-html > .out/index.html

  # Extract total coverage percentage more reliably
  TOTAL_COVERAGE=$(perl -ne 'print "$1\n" if /id="totalcov"[^>]*>([0-9.]+)/' .out/index.html || echo "0")

  # Check if coverage meets minimum requirement
  MIN_COVERAGE=58
  if (( $(echo "$TOTAL_COVERAGE < $MIN_COVERAGE" | bc -l 2>/dev/null) )); then
      echo -e "\033[0;31mTotal Coverage: ${TOTAL_COVERAGE}%\033[0m"
      echo -e "\033[0;31m❌ Coverage is below minimum required (${MIN_COVERAGE}%)\033[0m"
      exit 1
  else
      echo -e "\033[0;32mTotal Coverage: ${TOTAL_COVERAGE}%\033[0m"
      echo -e "\033[0;32m✅ Coverage meets minimum requirement (${MIN_COVERAGE}%)\033[0m"
  fi
}

runCoverage