openapi: 3.0.3
info:
  title: HTTP-UTILS - Custom Gorilla Mux API
  description: Example API running with a custom Gorilla Mux implementation.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/example/v1/
    description: Local development server

security:
  - OAuth2: [ ]

components:
  securitySchemes:
    ApiSecretKey:
      type: apiKey
      in: header
      name: X-API-KEY

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    OAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: http://172.17.0.1:8080
          scopes:
            "api:example:admin": Access test/v2 resource
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    BaseResponse:
      type: object
      properties:
        timestamp:
          type: integer
        message:
          type: string
        success:
          type: boolean
        code:
          type: integer
    PostTestRequest:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        code:
          type: integer
      required:
        - message
        - code
        - success
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        expires:
          type: integer
          example: 900

paths:
  /login:
    post:
      tags:
        - Authorization
      summary: Authentication endpoint
      description: Authenticate a user and respond with an access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"

  /test:
    get:
      tags:
        - Test
      summary: Public endpoint
      description: Test if the public route is working.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "It's working"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /test/{version}:
    get:
      tags:
        - Test
      summary: Secured endpoint
      description: Test if the secured route is working. Requires the role `api:example:admin`.
      parameters:
        - in: header
          name: Authorization
          description: jwt
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: ref
          description: Any data
          required: true
          schema:
            type: array
            items:
              type: string
        - in: path
          name: version
          description: the target version
          required: true
          schema:
            type: string
            example: v2
      security:
        - OAuth2:
            - api:example:admin

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "It's working"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        '403':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    post:
      tags:
        - Test
      summary: Secured endpoint
      description: Test if the secured route is working. Requires the role `api:example:admin`.
      parameters:
        - in: header
          name: Authorization
          description: jwt
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        - in: query
          name: ref
          description: Any data
          required: true
          schema:
            type: string
        - in: path
          name: version
          description: the target version
          required: true
          schema:
            type: string
            example: v2
      security:
        - OAuth2:
            - api:example:admin

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostTestRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "It's working"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        '403':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
