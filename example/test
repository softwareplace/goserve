#!/bin/bash

set -e 

go mod tidy
mkdir ".temp/" || true

go build -o ./.temp/runner example/main.go

export CONTEXT_PATH="/api/example/v1/"

./.temp/runner  2>&1 &

EXIT_CODE=0

validate() {
  expectedCode="$1"
  sleep 1

  response=$(curl --write-out '%{http_code}' --silent --output ./.temp/request-$expectedCode.json --location 'http://localhost:8080/api/example/v1/login' \
  --header 'Content-Type: application/json' \
  --data '{
      "username": "my-username",
      "password": "ynT9558iiMga&ayTVGs3Gc6ug1"
  }')

  if [ "$response" -eq $expectedCode ]; then
    echo
    echo "Request successful (Status Code: $expectedCode)"
    echo
    cat ./.temp/request-"$expectedCode".json | jq || true
    echo
  else
    echo "Request failed (Status Code: $response)"
    EXIT_CODE=1
  fi
  # Kill any process running on port 8080
  kill -9 $(lsof -t -i:8080) 2>/dev/null || true
}


validate 200



if [ "$EXIT_CODE" -ne 1 ]; then
  ./.temp/runner --d false 2>&1 &
  validate 401
fi

unset CONTEXT_PATH
exit $EXIT_CODE
